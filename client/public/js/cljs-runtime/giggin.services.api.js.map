{"version":3,"sources":["giggin/services/api.cljs"],"mappings":";AAIA,+BAAA,/BAAMA,sEACHC,IAAIC;AADP,AAAA;wMAGOA,jHACA,AAACC,4CAAI,AAACC,6CAAKH,IAAII,pLACf,oDAAA,7CAACC;;AAER,8CAAA,9CAAMC,oGAAyBC;AAA/B,AACE,OAACC,sBAAOC,uBAAgB,6BAAA,7BAACV,+EAAaQ;;AAGxC,8BAAA,9BAAMG,oEAASH;AAAf,AACE,OAACC,sBAAOG,kBAAW,6BAAA,7BAACZ,+EAAaQ;;AAEnC,oCAAA,4CAAAK,hFAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAA6BI;kBAA7B,AAAAF,4CAAAF,eAAA,zEAAoCK;AAApC,AACE,OAAMC,YAAW,CAAA,+EAAA,RAAgCF,wDAAWC;;AAE9D,iCAAA,jCAAME;AAAN,AAEE,0DAAA,+EAAA,2CAAA,uFAAA,yGAAA,2EAAA,qDAAA,8DAAA,3iBAACC,wOACWX,mGACMM;;AAKpB,8CAAA,9CAAMM,oGAAyBf;AAA/B,AACE,OAACC,sBAAOC,uBAAgB,6BAAA,7BAACV,+EAAaQ;;AAKxC,+BAAA,/BAAMgB,sEACHC,GAAGC,MAAMC,KAAKC,MAAMC,IAAIC;AAD3B,AAEE,0DAAA,+EAAA,2CAAA,0DAAA,qDAAA,wDAAA,2CAAA,qDAAA,4DAAA,0DAAA,2DAAA,uDAAA,uEAAA,uFAAA,yGAAA,2EAAA,qDAAA,8DAAA,jmCAACC,ibAEeN,yDAAUC,2DAAYC,0DAAYC,yDAAWC,4DAAYC,0EAC7DnB,mGACMM;;AAQpB,sCAAA,tCAAMe;AAAN,AAEE,0DAAA,oFAAA,2CAAA,uGAAA,yGAAA,2EAAA,qDAAA,8DAAA,hkBAACV,6OACWC,mHACMN;;AASpB,sCAAA,tCAAMgB,oFACHC,KAAKT;AADR,AAEE,2DAAA,0FAAA,2CAAA,0DAAA,qDAAA,wDAAA,2CAAA,qDAAA,kEAAA,uGAAA,yGAAA,2EAAA,qDAAA,8DAAA,h5BAACU,6bAEeV,wDAASS,wEACb3B,mHACMU","names":["giggin.services.api/index-by","key","coll","cljs.core.map","cljs.core.juxt","cljs.core/identity","cljs.core.into","giggin.services.api/handler-add-to-favorite","response","cljs.core/reset!","giggin.state/favorites","giggin.services.api/handler","giggin.state/gigs","p__17979","map__17980","cljs.core/--destructure-map","cljs.core.get","giggin.services.api/error-handler","status","status-text","js/console","giggin.services.api/fetch-gigs","ajax.core.GET","giggin.services.api/handler-fetch-favorites","giggin.services.api/save-gig","id","title","desc","price","img","artist","ajax.core.PUT","giggin.services.api/fetch-favorites","giggin.services.api/add-to-favorite","user","ajax.core.POST"],"sourcesContent":["(ns giggin.services.api\n  (:require [ajax.core :refer [GET POST PUT]]\n            [giggin.state :as state]))\n\n(defn index-by\n  [key coll]\n  \"Transfomr a coll to a map with a given key as a lookup value\"\n  (->> coll\n       (map (juxt key identity))\n       (into {})))\n\n(defn handler-add-to-favorite [response]\n  (reset! state/favorites (index-by :id response)))\n\n\n(defn handler [response]\n  (reset! state/gigs (index-by :id response)))\n\n(defn error-handler [{:keys [status status-text]}]\n  (.log js/console (str \"something bad happened: \" status \" \" status-text)))\n\n(defn fetch-gigs\n  []\n  (GET \"http://localhost:3005/gigs\"\n    {:handler handler\n     :error-handler error-handler\n     :response-format :json\n     :keywords? true}))\n\n\n(defn handler-fetch-favorites [response]\n  (reset! state/favorites (index-by :id response)))\n\n\n\n\n(defn save-gig\n  [id title desc price img artist]\n  (PUT \"http://localhost:3005/gigs\"\n    {:format :json\n     :params {:id id :title title :desc desc :price price :img img :artist artist}\n     :handler handler\n     :error-handler error-handler\n     :response-format :json\n     :keywords? true}))\n\n\n\n\n\n(defn fetch-favorites\n  []\n  (GET \"http://localhost:3005/favorites\"\n    {:handler handler-fetch-favorites\n     :error-handler error-handler\n     :response-format :json\n     :keywords? true}))\n\n\n\n\n\n\n(defn add-to-favorite\n  [user id]\n  (POST \"http://localhost:3005/favorite/toggle\"\n    {:format :json\n     :params {:id id :user user}\n     :handler handler-add-to-favorite\n     :error-handler error-handler\n     :response-format :json\n     :keywords? true}))"]}